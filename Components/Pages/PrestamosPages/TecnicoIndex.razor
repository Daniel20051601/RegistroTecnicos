@page "/Tecnico/Index"

@inject TecnicosService tecnicosService

<PageTitle>Registro de Técnicos</PageTitle>
<div class="container">
    <div class="card shadow-lg">

        <div class="d-flex justify-content-center align-items-center mt-4">
            <h5 class="card-title mb-0">Consulta de Técnicos</h5>
        </div>

        <div class="card-body">

            @*labels*@
            <div class="row">

                @*Filtrar por*@
                <div class="col-3">
                    <label class="col-form-label"><strong>Filtrar por</strong></label>
                </div>

                @* Botón Crear  *@
                <div class="col text-end">
                    <a href="/Tecnico/Create" class="btn btn-success">
                        <span class="bi bi-plus-square"></span> Crear
                    </a>
                </div>

            </div>

            @*Inputs y botones*@
            <div class="row align-items-center">
                @*filtro*@
                <div class="col-3">
                    <InputSelect class="form-select" @bind-Value="Filtro" @onchange="Ordenar">
                        <option value="TecnicoId" selected>TécnicoID</option>
                        <option value="Nombre">Nombre</option>
                    </InputSelect>
                </div>

                @*Busqueda*@
                <div class="col-4">
                    <div class="input-group">
                        <input class="form-control" @bind="ValorFiltro" @oninput="Buscar" placeholder="Buscar por nombre" />
                        <button type="button" class="btn btn-primary" @onclick="Buscar">
                            <i class="bi bi-search me-1"></i> Buscar
                        </button>
                    </div>
                </div>
            </div>

            <table class="table table-hover">
                <thead class="table  table-striped text-black">
                    <tr>
                        <th>TecnicoId</th>
                        <th>Nombre</th>
                        <th>Sueldo</th>
                        <th>Editar</th>
                        <th>Borrar</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var tecnico in ListaTecnicos)
                    {
                        <tr>
                            <td> @tecnico.TecnicoId</td>
                            <td> @tecnico.Nombre</td>
                            <td> @tecnico.SueldoPorHora</td>

                            <td>
                                <a href="/Tecnico/Edit/@tecnico.TecnicoId" class="btn btn-outline-primary bi bi-pencil-square"></a>
                            </td>
                            <td>
                                <a type="button" class="btn btn-danger bi bi-trash" href="/Tecnico/Eliminar/@tecnico.TecnicoId"> </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    public List<Tecnicos> ListaTecnicos { get; set; } = new List<Tecnicos>();
    public string Filtro { get; set; } = "TecnicoId";
    public string ValorFiltro { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await CargarYOrdenar();
    }

    private async Task CargarYOrdenar()
    {
        // Carga todos los técnicos
        var lista = await tecnicosService.Listar(t => t.TecnicoId > 0);

        // Aplica filtro de búsqueda por nombre si hay texto
        if (!string.IsNullOrWhiteSpace(ValorFiltro))
        {
            lista = lista
                .Where(t => t.Nombre != null && t.Nombre.ToLower().Contains(ValorFiltro.ToLower()))
                .ToList();
        }

        // Ordena según el filtro seleccionado
        if (Filtro == "Nombre")
            ListaTecnicos = lista.OrderBy(t => t.Nombre).ToList();
        else
            ListaTecnicos = lista.OrderBy(t => t.TecnicoId).ToList();
    }

    private async Task Buscar()
    {
        await CargarYOrdenar();
    }

    private async Task Ordenar(ChangeEventArgs e)
    {
        Filtro = e.Value?.ToString() ?? "TecnicoId";
        await CargarYOrdenar();
    }

    private async Task Eliminar(int id)
    {
        var result = await tecnicosService.Eliminar(id);
        if (result)
        {
            await CargarYOrdenar();
        }
    }
}